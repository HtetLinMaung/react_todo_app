{"version":3,"sources":["components/Textfield/Textfield.module.css","components/SwitchControl/SwitchControl.module.css","components/Center/Center.module.css","components/Card/Card.module.css","components/Flex/Flex.module.css","components/Text/Text.module.css","components/Checkbox/Checkbox.module.css","components/ScrollView/ScrollView.module.css","components/Click/Click.module.css","components/Container/Container.module.css","reducers/todoReducer.js","reducers/index.js","actions/types.js","store.js","components/Center/Center.jsx","actions/todosAction.js","components/Card/Card.jsx","components/Flex/Flex.jsx","components/Text/Text.jsx","components/Checkbox/Checkbox.jsx","components/Textfield/Textfield.jsx","components/SwitchControl/SwitchControl.jsx","components/ScrollView/ScrollView.jsx","components/Click/Click.jsx","components/TodoList.jsx","components/TodoApp.jsx","components/Container/Container.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","initialState","todos","originalTodos","addTodoText","completeAll","hideComplete","combineReducers","todoReducer","state","type","payload","map","todo","_id","completed","filter","title","startsWith","store","createStore","rootReducer","applyMiddleware","thunk","Center","props","className","classes","center","children","toggleComplete","id","Card","minWidth","maxHeight","card","style","Flex","direction","flex","basis","align","justify","padding","height","flexDirection","alignItems","justifyContent","Text","color","size","lineThrough","text","fontSize","textAlign","textDecoration","Checkbox","checked","name","handleClick","circle","label","checkboxInput","useRef","background","iconColor","labelEl","checkbox","width","borderRadius","onClick","current","click","path","mdiCheck","display","onChange","ref","Textfield","preEl","value","handleInput","maxWidth","rounded","preIcon","postIcon","handleKeyPress","placeholder","useState","animateColor","setAnimateColor","iconElement","icon","postEl","wrapper","borderColor","textField","onFocus","onBlur","onKeyPress","SwitchControl","loading","innerSwitchStyle","switchStyle","transform","switch","switchInner","ScrollView","scrollView","Click","mapDispatchToProps","connect","ownProps","reload","startTransitions","endTransition","deleteAnimation","setDeleteAnimation","onChecked","axios","patch","api_domain","then","catch","err","alert","todosList","index","key","bind","newDeleteAnimation","delete","onDelete","mdiWindowClose","fetchTodos","query","callback","dispatch","get","res","data","message","setTodoText","toggleCompleteAll","toggleHideComplete","filterTodos","useEffect","e","target","post","Container","container","backgroundColor","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.8675dd52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Textfield_wrapper__3LJGD\",\"textField\":\"Textfield_textField__116tO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"SwitchControl_switch__3xmoV\",\"switchInner\":\"SwitchControl_switchInner__3xBYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Center_center__72b9v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3xpq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"Flex_flex__3UtZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__2HavH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__OEn2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollView\":\"ScrollView_scrollView__3A6n8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"click\":\"Click_click___2e-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1YYPa\"};","import {\r\n  FETCH_ALL,\r\n  SET_ADD_TODO_TEXT,\r\n  TOGGLE_COMPLETE,\r\n  TOGGLE_COMPLETE_ALL,\r\n  HIDE_COMPLETE,\r\n  FILTER_TODOS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  originalTodos: [],\r\n  addTodoText: \"\",\r\n  completeAll: false,\r\n  hideComplete: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_ALL:\r\n      return { ...state, todos: payload, originalTodos: payload };\r\n    case SET_ADD_TODO_TEXT:\r\n      return { ...state, addTodoText: payload };\r\n    case TOGGLE_COMPLETE:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo._id === payload) {\r\n            return { ...todo, completed: !todo.completed };\r\n          } else {\r\n            return { ...todo };\r\n          }\r\n        }),\r\n      };\r\n    case TOGGLE_COMPLETE_ALL:\r\n      return { ...state, completeAll: !state.completeAll };\r\n    case HIDE_COMPLETE:\r\n      return { ...state, hideComplete: !state.hideComplete };\r\n    case FILTER_TODOS:\r\n      let todos = null;\r\n      if (payload) {\r\n        todos = state.originalTodos.filter((todo) =>\r\n          todo.title.startsWith(payload)\r\n        );\r\n      } else {\r\n        todos = [...state.originalTodos];\r\n      }\r\n      return { ...state, todos };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\n\r\nexport default combineReducers({ todoReducer });\r\n","export const FETCH_ALL = \"FETCH_ALL\";\r\nexport const COMPLETE_TODO = \"COMPLETE_TODO\";\r\nexport const SET_ADD_TODO_TEXT = \"SET_ADD_TODO_TEXT\";\r\nexport const TOGGLE_COMPLETE_ALL = \"TOGGLE_COMPLETE_ALL\";\r\nexport const TOGGLE_COMPLETE = \"TOGGLE_COMPLETE\";\r\nexport const HIDE_COMPLETE = \"HIDE_COMPLETE\";\r\nexport const FILTER_TODOS = \"FILTER_TODOS\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport classes from \"./Center.module.css\";\r\n\r\nconst Center = (props) => (\r\n  <div className={classes.center}>\r\n    <div>{props.children}</div>\r\n  </div>\r\n);\r\n\r\nexport default Center;\r\n","import axios from \"axios\";\r\nimport { api_domain } from \"../configs.json\";\r\nimport {\r\n  FETCH_ALL,\r\n  SET_ADD_TODO_TEXT,\r\n  TOGGLE_COMPLETE,\r\n  TOGGLE_COMPLETE_ALL,\r\n  HIDE_COMPLETE,\r\n  FILTER_TODOS,\r\n} from \"./types\";\r\n\r\nexport const fetchTodos = (query = \"\", callback = () => {}) => (dispatch) => {\r\n  axios\r\n    .get(`${api_domain}todos?${query}`)\r\n    .then((res) => {\r\n      callback();\r\n      dispatch({\r\n        type: FETCH_ALL,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => alert(err.message));\r\n};\r\n\r\nexport const setTodoText = (text) => ({\r\n  type: SET_ADD_TODO_TEXT,\r\n  payload: text,\r\n});\r\n\r\nexport const toggleCompleteAll = () => ({\r\n  type: TOGGLE_COMPLETE_ALL,\r\n});\r\n\r\nexport const toggleComplete = (id) => ({\r\n  type: TOGGLE_COMPLETE,\r\n  payload: id,\r\n});\r\n\r\nexport const toggleHideComplete = () => ({\r\n  type: HIDE_COMPLETE,\r\n});\r\n\r\nexport const filterTodos = (title) => ({\r\n  type: FILTER_TODOS,\r\n  payload: title,\r\n});\r\n","import React from \"react\";\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = ({ children, minWidth, maxHeight }) => (\r\n  <div\r\n    className={classes.card}\r\n    style={{ minWidth: `${minWidth}px`, maxHeight }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport classes from \"./Flex.module.css\";\r\n\r\nconst Flex = ({\r\n  children,\r\n  direction,\r\n  flex,\r\n  basis,\r\n  align,\r\n  justify,\r\n  padding,\r\n  height,\r\n  style,\r\n}) => (\r\n  <div\r\n    className={classes.flex}\r\n    style={{\r\n      flexDirection: direction,\r\n      flex,\r\n      basis: `${basis}px`,\r\n      alignItems: align,\r\n      justifyContent: justify,\r\n      padding,\r\n      height,\r\n      ...style,\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Flex;\r\n","import React from \"react\";\r\nimport classes from \"./Text.module.css\";\r\n\r\nconst Text = ({ children, color, size, title, justify, lineThrough }) => (\r\n  <div\r\n    className={classes.text}\r\n    style={{\r\n      color,\r\n      fontSize: `${title ? \"36\" : size}px`,\r\n      textAlign: justify,\r\n      textDecoration: lineThrough ? \"line-through\" : \"\",\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Text;\r\n","import React, { useRef } from \"react\";\r\nimport classes from \"./Checkbox.module.css\";\r\n\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiCheck } from \"@mdi/js\";\r\n\r\nimport Center from \"../Center/Center\";\r\nimport Flex from \"../Flex/Flex\";\r\nimport Text from \"../Text/Text\";\r\n\r\nconst Checkbox = ({\r\n  checked,\r\n  size,\r\n  color,\r\n  name,\r\n  handleClick,\r\n  circle,\r\n  label,\r\n}) => {\r\n  const checkboxInput = useRef(null);\r\n\r\n  let background = \"#fff\";\r\n  let iconColor = \"#cbcbcb\";\r\n  if (checked) {\r\n    background = color || \"#42caae\";\r\n    iconColor = \"#fff\";\r\n  }\r\n\r\n  let labelEl = null;\r\n  if (label) {\r\n    labelEl = (\r\n      <Flex>\r\n        <Text>{label}</Text>\r\n      </Flex>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Flex padding=\"0\" align=\"center\">\r\n      <Flex padding=\"0\">\r\n        <div\r\n          className={classes.checkbox}\r\n          style={{\r\n            width: `${size}px`,\r\n            height: `${size}px`,\r\n            background,\r\n            borderRadius: circle ? 50 + \"%\" : \"\",\r\n          }}\r\n          onClick={() => checkboxInput.current.click()}\r\n        >\r\n          <Center>\r\n            <Icon path={mdiCheck} size=\"16px\" color={iconColor}></Icon>\r\n          </Center>\r\n          <input\r\n            style={{ display: \"none\" }}\r\n            name={name}\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            onChange={handleClick}\r\n            ref={checkboxInput}\r\n          />\r\n        </div>\r\n      </Flex>\r\n      {labelEl}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./Textfield.module.css\";\r\n\r\nimport Icon from \"@mdi/react\";\r\n\r\nimport Flex from \"../Flex/Flex\";\r\n\r\nconst Textfield = ({\r\n  value,\r\n  handleInput,\r\n  maxWidth,\r\n  height,\r\n  rounded,\r\n  size,\r\n  preIcon,\r\n  postIcon,\r\n  handleKeyPress,\r\n  name,\r\n  placeholder,\r\n}) => {\r\n  const [animateColor, setAnimateColor] = useState(\"#cbcbcb\");\r\n\r\n  const iconElement = (icon) => (\r\n    <Flex align=\"center\">\r\n      <Icon path={icon} size=\"16px\" color={animateColor}></Icon>\r\n    </Flex>\r\n  );\r\n\r\n  let preEl,\r\n    postEl = null;\r\n  if (preIcon) {\r\n    preEl = iconElement(preIcon);\r\n  }\r\n  if (postIcon) {\r\n    postEl = iconElement(postIcon);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classes.wrapper}\r\n      style={{\r\n        maxWidth,\r\n        height,\r\n        borderRadius: rounded ? 35 + \"px\" : \"\",\r\n        borderColor: animateColor,\r\n      }}\r\n    >\r\n      <Flex padding=\"0\" align=\"stretch\" height=\"100%\">\r\n        {preEl}\r\n        <Flex flex=\"1\" padding=\"0\" align=\"center\">\r\n          <input\r\n            type=\"text\"\r\n            name={name}\r\n            className={classes.textField}\r\n            value={value}\r\n            onChange={handleInput}\r\n            style={{ borderRadius: rounded ? 35 + \"px\" : \"\", fontSize: size }}\r\n            onFocus={() => setAnimateColor(\"#f0456b\")}\r\n            onBlur={() => setAnimateColor(\"#cbcbcb\")}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder={placeholder}\r\n          />\r\n        </Flex>\r\n        {postEl}\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Textfield;\r\n","import React, { useRef } from \"react\";\r\nimport classes from \"./SwitchControl.module.css\";\r\n\r\nimport Flex from \"../Flex/Flex\";\r\nimport Text from \"../Text/Text\";\r\n\r\nconst SwitchControl = ({ checked, handleClick, loading, label }) => {\r\n  const checkboxInput = useRef(null);\r\n\r\n  let innerSwitchStyle = null;\r\n  let switchStyle = null;\r\n  if (checked) {\r\n    innerSwitchStyle = { transform: \"translateX(153%)\" };\r\n    switchStyle = { background: \"#1bc665\" };\r\n  } else {\r\n    innerSwitchStyle = { transform: \"translateX(0%)\" };\r\n    switchStyle = { background: \"#e1413e\" };\r\n  }\r\n\r\n  return (\r\n    <Flex padding=\"0\" align=\"center\">\r\n      <Flex>\r\n        <Text>{label}</Text>\r\n      </Flex>\r\n      <Flex>\r\n        <div\r\n          className={classes.switch}\r\n          onClick={() => checkboxInput.current.click()}\r\n          style={switchStyle}\r\n        >\r\n          <div className={classes.switchInner} style={innerSwitchStyle}></div>\r\n          <input\r\n            style={{ display: \"none\" }}\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            onChange={handleClick}\r\n            ref={checkboxInput}\r\n          />\r\n        </div>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default SwitchControl;\r\n","import React from \"react\";\r\nimport classes from \"./ScrollView.module.css\";\r\n\r\nconst ScrollView = ({ children, height }) => (\r\n  <div className={classes.scrollView} style={{ height }}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default ScrollView;\r\n","import React from \"react\";\r\nimport classes from \"./Click.module.css\";\r\n\r\nconst Click = ({ children, click }) => (\r\n  <div className={classes.click} onClick={click}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Click;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { api_domain } from \"../configs.json\";\r\n\r\nimport { toggleComplete } from \"../actions/todosAction\";\r\n\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiWindowClose } from \"@mdi/js\";\r\n\r\nimport ScrollView from \"./ScrollView/ScrollView\";\r\nimport Flex from \"./Flex/Flex\";\r\nimport Text from \"./Text/Text\";\r\nimport Checkbox from \"./Checkbox/Checkbox\";\r\nimport Click from \"./Click/Click\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TodoList = ({ todos, reload, toggleComplete }) => {\r\n  const startTransitions = todos.map(() => ({\r\n    transform: \"translateX(0%)\",\r\n  }));\r\n  const endTransition = { transform: \"translateX(-100%)\" };\r\n\r\n  const [deleteAnimation, setDeleteAnimation] = useState(startTransitions);\r\n\r\n  const onChecked = ({ _id, completed }) => {\r\n    toggleComplete(_id);\r\n    axios\r\n      .patch(`${api_domain}todos/${_id}`, { completed: !completed })\r\n      .then(() => reload())\r\n      .catch((err) => alert(err));\r\n  };\r\n\r\n  const onDelete = (id, index) => {\r\n    const newDeleteAnimation = [...deleteAnimation];\r\n    newDeleteAnimation[index] = endTransition;\r\n    setDeleteAnimation(newDeleteAnimation);\r\n\r\n    axios\r\n      .delete(`${api_domain}todos/${id}`)\r\n      .then(() => {\r\n        reload(() => {\r\n          setDeleteAnimation(startTransitions);\r\n        });\r\n      })\r\n      .catch((err) => alert(err));\r\n  };\r\n\r\n  const todosList = todos.map((todo, index) => (\r\n    <Flex key={todo._id} align=\"center\" style={deleteAnimation[index]}>\r\n      <Flex>\r\n        <Checkbox\r\n          circle\r\n          size=\"20\"\r\n          checked={todo.completed}\r\n          handleClick={onChecked.bind(this, todo, index)}\r\n        />\r\n      </Flex>\r\n      <Flex flex=\"1\">\r\n        <Text\r\n          color={todo.completed ? \"#7d807f\" : \"\"}\r\n          lineThrough={todo.completed}\r\n        >\r\n          {todo.title}\r\n        </Text>\r\n      </Flex>\r\n      <Flex>\r\n        <Click click={() => onDelete(todo._id, index)}>\r\n          <Icon path={mdiWindowClose} size=\"16px\" color=\"#f54169\"></Icon>\r\n        </Click>\r\n      </Flex>\r\n    </Flex>\r\n  ));\r\n\r\n  return <ScrollView height=\"300px\">{todosList}</ScrollView>;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { todos } = state.todoReducer;\r\n\r\n  return { todos, reload: ownProps.reload };\r\n};\r\n\r\nconst mapDispatchToProps = { toggleComplete };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { api_domain } from \"../configs.json\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchTodos,\r\n  setTodoText,\r\n  toggleComplete,\r\n  toggleCompleteAll,\r\n  toggleHideComplete,\r\n  filterTodos,\r\n} from \"../actions/todosAction\";\r\n\r\nimport Card from \"./Card/Card\";\r\nimport Flex from \"./Flex/Flex\";\r\nimport Text from \"./Text/Text\";\r\nimport Checkbox from \"./Checkbox/Checkbox\";\r\nimport Textfield from \"./Textfield/Textfield\";\r\nimport SwitchControl from \"./SwitchControl/SwitchControl\";\r\n\r\nimport TodoList from \"./TodoList\";\r\n\r\nconst TodoApp = ({\r\n  fetchTodos,\r\n  addTodoText,\r\n  setTodoText,\r\n  completeAll,\r\n  toggleCompleteAll,\r\n  toggleHideComplete,\r\n  hideComplete,\r\n  filterTodos,\r\n  title,\r\n}) => {\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, [fetchTodos]);\r\n\r\n  const reload = (callback) => {\r\n    if (hideComplete) {\r\n      fetchTodos(\"completed=false\", callback);\r\n    } else {\r\n      fetchTodos(\"\", callback);\r\n    }\r\n  };\r\n\r\n  const onPressEnter = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      axios\r\n        .post(`${api_domain}todos`, { title: addTodoText })\r\n        .then(() => {\r\n          reload();\r\n          setTodoText(\"\");\r\n        })\r\n        .catch((err) => alert(err));\r\n    }\r\n  };\r\n\r\n  const onCompleteAll = (e) => {\r\n    toggleCompleteAll();\r\n    axios\r\n      .patch(`${api_domain}todos/complete-all`, {\r\n        completed: e.target.checked,\r\n      })\r\n      .then(() => reload())\r\n      .catch((err) => alert(err));\r\n  };\r\n\r\n  const onSwitchHandle = (e) => {\r\n    toggleHideComplete();\r\n    if (e.target.checked) {\r\n      fetchTodos(\"completed=false\");\r\n    } else {\r\n      fetchTodos();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Text justify=\"center\" title>\r\n        {title}\r\n      </Text>\r\n      <Flex>\r\n        <Flex flex=\"1\"></Flex>\r\n        <Flex>\r\n          <SwitchControl\r\n            checked={hideComplete}\r\n            handleClick={onSwitchHandle}\r\n            label=\"Hide Completed\"\r\n          />\r\n        </Flex>\r\n      </Flex>\r\n      <Flex align=\"center\">\r\n        <Flex>\r\n          <Checkbox\r\n            size=\"20\"\r\n            label=\"Complete All\"\r\n            checked={completeAll}\r\n            handleClick={onCompleteAll}\r\n          />\r\n        </Flex>\r\n        <Flex flex={1}>\r\n          <Textfield\r\n            value={addTodoText}\r\n            handleInput={(e) => {\r\n              setTodoText(e.target.value);\r\n              filterTodos(e.target.value);\r\n            }}\r\n            handleKeyPress={onPressEnter}\r\n            rounded\r\n            placeholder=\"Search Or Add Todos here...\"\r\n            height=\"40px\"\r\n          />\r\n        </Flex>\r\n      </Flex>\r\n      <TodoList reload={reload} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { todos, addTodoText, completeAll, hideComplete } = state.todoReducer;\r\n  return {\r\n    todos,\r\n    addTodoText,\r\n    completeAll,\r\n    hideComplete,\r\n    title: ownProps.title,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchTodos,\r\n  setTodoText,\r\n  toggleComplete,\r\n  toggleCompleteAll,\r\n  toggleHideComplete,\r\n  filterTodos,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoApp);\r\n","import React from \"react\";\r\nimport classes from \"./Container.module.css\";\r\n\r\nconst Container = ({ color, children }) => (\r\n  <div className={classes.container} style={{ backgroundColor: color }}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Center from \"./components/Center/Center\";\nimport TodoApp from \"./components/TodoApp\";\nimport Container from \"./components/Container/Container\";\n\nconst App = () => (\n  <Provider store={store}>\n    <Container color=\"#f9fbfc\">\n      <Center>\n        <TodoApp title=\"Todo App\" />\n      </Center>\n    </Container>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}